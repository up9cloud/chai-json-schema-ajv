expected { type: '__invalid__' } to be a valid json-schema
[ { instancePath: '/type',
    schemaPath: '#/definitions/simpleTypes/enum',
    keyword: 'enum',
    params: 
     { allowedValues: 
        [ 'array',
          'boolean',
          'integer',
          'null',
          'number',
          'object',
          'string' ] },
    message: 'must be equal to one of the allowed values',
    schema: 
     [ 'array',
       'boolean',
       'integer',
       'null',
       'number',
       'object',
       'string' ],
    parentSchema: 
     { enum: 
        [ 'array',
          'boolean',
          'integer',
          'null',
          'number',
          'object',
          'string' ] },
    data: '__invalid__' },
  { instancePath: '/type',
    schemaPath: '#/properties/type/anyOf/1/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array',
    schema: 'array',
    parentSchema: 
     { type: 'array',
       items: { '$ref': '#/definitions/simpleTypes' },
       minItems: 1,
       uniqueItems: true },
    data: '__invalid__' },
  { instancePath: '/type',
    schemaPath: '#/properties/type/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf',
    schema: 
     [ { '$ref': '#/definitions/simpleTypes' },
       { type: 'array',
         items: { '$ref': '#/definitions/simpleTypes' },
         minItems: 1,
         uniqueItems: true } ],
    parentSchema: 
     { anyOf: 
        [ { '$ref': '#/definitions/simpleTypes' },
          { type: 'array',
            items: { '$ref': '#/definitions/simpleTypes' },
            minItems: 1,
            uniqueItems: true } ] },
    data: '__invalid__' } ]